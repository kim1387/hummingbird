buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}
plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'application'
	id "org.asciidoctor.convert" version "1.5.9.2"
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.hummingbird'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

//ext {
//	// Snippet 의 생성 위치를 지정
//	snippetsDir = file('build/generated-snippets')
//}
//
//asciidoctor {
//	// Snippets 디렉토리를 Input 디렉토리로 설정
//	inputs.dir snippetsDir
//	// 문서 생성 전 테스트가 실행되도록 test 에 종속 설정
//	dependsOn test
//}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//swagger-ui
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'

	//springboot validation
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'

	//fcm
	implementation 'com.google.firebase:firebase-admin:8.1.0'

	// test code 에도 lombok 적용
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	/*
	https://young-bin.tistory.com/92
    asciidocker 에 대한 spring-restdocs-asciidocker 의존성 추가
    Maven 처럼 build/generated-snippets 밑에 생성된 Snippet 을 .adoc 파일이 자동으로
    가리키도록 하는 설정 추가.
    operation 블록 매크로 사용 가능
	*/
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	// Maven 과 같이 test Scope 에 대한 mockMvc 의존성을 추가 (WebClient, Assured 사용가능)
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	// https://mvnrepository.com/artifact/org.springframework.data/spring-data-redis
	implementation group: 'org.springframework.data', name: 'spring-data-redis', version: '2.6.2'

	// https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.2'

	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.json:json:20200518'



}

test {
	useJUnitPlatform()
	// Snippets 디렉토리를 출력으로 작업하도록 설정
//	outputs.dir snippetsDir
}

bootRun {
	mainClassName = 'com.hummingbird.backend.BackendApplication'
}

bootJar {
	mainClassName = 'com.hummingbird.backend.BackendApplication'
	// 빌드 전 문서 생성 확인
//	dependsOn asciidoctor
//	// 생성된 문서를 static/docs 에 복사
//	from ("${asciidoctor.outputDir}/html5") {
//		into 'static/docs'
//	}
}
//querydsl start
def querydslDir = "$buildDir/generated/querydsl" as Object

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
//querydsl end
